package com.upgrad.quora.service.entity;

import java.time.ZonedDateTime;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import org.hibernate.annotations.OnDelete;
import org.hibernate.annotations.OnDeleteAction;

//@Entity annotation defining that this class should be implemented as table in the db
//@Table annotation giving the name and scheme for the entity in the db
//@NamedQueries annotation defines queries which will be executed on this entity to help the corresponding dao

@Entity
@Table(name = "answer")
@NamedQueries(
    {
        @NamedQuery(name = "answerEntityByUuid", query = "select a from AnswerEntity a where a.uuid = :uuid"),
        @NamedQuery(name = "answersByQuestionId", query = "select a from AnswerEntity a where a.questionEntity.uuid = :uuid")
    }
)
public class AnswerEntity {

  //attributes of this class which will be represented as columns in the corresponding table in the db
  //@ID annotation marks the id attribute as the primary key
  //@Column annotation gives the name to be given to the corresponding column in the db
  //@GeneratedValue annotation implies that this field is autogenerated
  //@Size annotation defines the size limit the value can have
  //@NotNull annotation marks that the attribute is mandatory
  //@ManyToOne Annotation defines the association between two entities
  //@OnDelete Annotation defines the cascading nature of the delete operation when entities are associated thru attributes
  //@JoinColumn Annotation defines the column that joins two entities and the name for that column

  @Id
  @Column(name = "id")
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  private Integer id;

  @Column(name = "uuid")
  @NotNull
  @Size(max = 200)
  private String uuid;


  @Column(name = "ans")
  @NotNull
  @Size(max = 255)
  private String answer;

  @Column(name = "date")
  @NotNull
  private ZonedDateTime date;

  @ManyToOne
  @OnDelete(action = OnDeleteAction.CASCADE)
  @JoinColumn(name = "user_id")
  @NotNull
  private UserEntity userEntity;

  @ManyToOne
  @OnDelete(action = OnDeleteAction.CASCADE)
  @JoinColumn(name = "question_id")
  @NotNull
  private QuestionEntity questionEntity;

  //getters and setters for all the attributes of the class

  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public String getAnswer() {
    return answer;
  }

  public void setAnswer(String answer) {
    this.answer = answer;
  }

  public ZonedDateTime getDate() {
    return date;
  }

  public void setDate(ZonedDateTime date) {
    this.date = date;
  }

  public UserEntity getUserEntity() {
    return userEntity;
  }

  public void setUserEntity(UserEntity userEntity) {
    this.userEntity = userEntity;
  }

  public QuestionEntity getQuestionEntity() {
    return questionEntity;
  }

  public void setQuestionEntity(QuestionEntity questionEntity) {
    this.questionEntity = questionEntity;
  }
}
